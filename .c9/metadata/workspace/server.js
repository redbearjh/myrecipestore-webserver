{"filter":false,"title":"server.js","tooltip":"/server.js","undoManager":{"mark":4,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["//","// # SimpleServer","//","// A simple chat server using Socket.IO, Express, and Async.","//","var http = require('http');","var path = require('path');","","var async = require('async');","var socketio = require('socket.io');","var express = require('express');","","//","// ## SimpleServer `SimpleServer(obj)`","//","// Creates a new instance of SimpleServer with the following options:","//  * `port` - The HTTP port to listen on. If `process.env.PORT` is set, _it overrides this value_.","//","var router = express();","var server = http.createServer(router);","var io = socketio.listen(server);","","router.use(express.static(path.resolve(__dirname, 'client')));","var messages = [];","var sockets = [];","","io.on('connection', function (socket) {","    messages.forEach(function (data) {","      socket.emit('message', data);","    });","","    sockets.push(socket);","","    socket.on('disconnect', function () {","      sockets.splice(sockets.indexOf(socket), 1);","      updateRoster();","    });","","    socket.on('message', function (msg) {","      var text = String(msg || '');","","      if (!text)","        return;","","      socket.get('name', function (err, name) {","        var data = {","          name: name,","          text: text","        };","","        broadcast('message', data);","        messages.push(data);","      });","    });","","    socket.on('identify', function (name) {","      socket.set('name', String(name || 'Anonymous'), function (err) {","        updateRoster();","      });","    });","  });","","function updateRoster() {","  async.map(","    sockets,","    function (socket, callback) {","      socket.get('name', callback);","    },","    function (err, names) {","      broadcast('roster', names);","    }","  );","}","","function broadcast(event, data) {","  sockets.forEach(function (socket) {","    socket.emit(event, data);","  });","}","","server.listen(process.env.PORT || 3000, process.env.IP || \"0.0.0.0\", function(){","  var addr = server.address();","  console.log(\"Chat server listening at\", addr.address + \":\" + addr.port);","});",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["var htmlapp = express();","htmlapp.use(express.static('public/app'));","htmlapp.engine('html', require('ejs').renderFile);","htmlapp.set('view engine', 'html');","var htmlserver = http.createServer(htmlapp);","var io = socketio.listen(htmlserver);","htmlapp.use(express.static(path.resolve(__dirname,'/public/app')));","","htmlserver.listen( process.env.PORT || 3100, process.env.IP || \"0.0.0.0\");",""]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["var express = require('express');","var path = require('path');",""],"id":5}],[{"start":{"row":2,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["var http = require('http');","var async = require('async');","var socketio = require(\"socket.io\");",""],"id":6}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":16,"column":0},"end":{"row":16,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1475359387303,"hash":"93b8aeb2cff97ccfc0c496f7294a63c6071d6235"}